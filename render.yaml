version: "1"
previewsEnabled: true
previewsExpireAfterDays: 3
envVarGroups:
- name: MEEP production environment
  envVars:
    - key: CONCURRENCY
      value: 2
    - key: SHARED_SECRET
      generateValue: true
databases:
- name: meep-database
  databaseName: meep_database
  user: meep_database_user
  plan: standard
  previewPlan: starter
  region: frankfurt
  ipAllowList:
  - source: 0.0.0.0/0
    description: everywhere
  postgresMajorVersion: "16"
services:
- type: web
  name: meep-intelligence-hub-backend
  runtime: python
  repo: https://github.com/commonknowledge/mapped
  plan: standard
  previewPlan: starter
  envVars:
  - key: SCHEDULED_UPDATE_SECONDS_DELAY
    sync: false
  - key: MINIO_STORAGE_STATIC_BUCKET_NAME
    sync: false
  - key: MINIO_STORAGE_SECRET_KEY
    sync: false
  - key: MINIO_STORAGE_MEDIA_BUCKET_NAME
    sync: false
  - key: MINIO_STORAGE_ENDPOINT
    sync: false
  - key: MINIO_STORAGE_AUTO_CREATE_STATIC_BUCKET
    sync: false
  - key: MINIO_STORAGE_AUTO_CREATE_MEDIA_BUCKET
    sync: false
  - key: MINIO_STORAGE_ACCESS_KEY
    sync: false
  - key: GOOGLE_SITE_VERIFICATION
    sync: false
  - key: GOOGLE_ANALYTICS
    sync: false
  - key: FRONTEND_SITE_TITLE
    sync: false
  - key: FRONTEND_BASE_URL
    sync: false
  - key: EMAIL_USE_TLS
    sync: false
  - key: EMAIL_PORT
    sync: false
  - key: EMAIL_HOST_USER
    sync: false
  - key: EMAIL_HOST_PASSWORD
    sync: false
  - key: EMAIL_HOST
    sync: false
  - key: EMAIL_BACKEND
    sync: false
  - key: ELECTORAL_COMMISSION_API_KEY
    sync: false
  - key: DEFAULT_FROM_EMAIL
    sync: false
  - key: DATABASE_URL
    fromDatabase:
      name: meep-database
      property: connectionString
  - key: CORS_ALLOWED_ORIGINS
    sync: false
  - key: CACHE_FILE
    sync: false
  - key: BASE_URL
    sync: false
  - key: ALLOWED_HOSTS
    sync: false
    value: "api.mapped.commonknowledge.coop,mapped-api.commonknowledge.coop,meep-intelligence-hub-backend-fpiw.onrender.com,unitedfor.org,peopleclimatenature.org"
  - fromGroup: MEEP production environment
  region: frankfurt
  buildCommand: poetry install
  startCommand: python manage.py collectstatic --noinput && python manage.py compress
    --force && gunicorn local_intelligence_hub.asgi:application -k uvicorn.workers.UvicornWorker
  preDeployCommand: python manage.py migrate
  healthCheckPath: /
  domains:
  - api.mapped.commonknowledge.coop
  scaling:
    minInstances: 1
    maxInstances: 2
    targetCPUPercent: 70
    targetMemoryPercent: 70
  buildFilter:
    ignoredPaths:
    - nextjs/**
- type: worker
  name: meep-intelligence-hub-worker
  runtime: python
  repo: https://github.com/commonknowledge/mapped
  plan: standard
  previewPlan: starter
  envVars:
  - key: DATABASE_URL
    fromDatabase:
      name: meep-database
      property: connectionString
  - key: SCHEDULED_UPDATE_SECONDS_DELAY
    value: 0
  - key: MAPIT_URL
  - key: MAPIT_API_KEY
  - key: CACHE_FILE
    value: /tmp/meep
  - key: BASE_URL_HOST
    fromService:
      name: meep-intelligence-hub-backend
      property: host
  - key: BASE_URL_PROTOCOL
    value: "https"
  - fromGroup: MEEP production environment
  region: frankfurt
  buildCommand: poetry install
  startCommand: python manage.py procrastinate worker
  preDeployCommand: python manage.py migrate
  buildFilter:
    ignoredPaths:
    - nextjs/**
- type: web
  name: meep-intelligence-hub-frontend
  runtime: node
  repo: https://github.com/commonknowledge/mapped
  plan: standard
  previewPlan: starter
  envVars:
  - fromGroup: MEEP production environment
  region: frankfurt
  buildCommand: npm install && npm run build
  startCommand: npm run start
  domains:
  - www.peopleclimatenature.org
  - peopleclimatenature.org
  - prototype.mapped.commonknowledge.coop
  scaling:
    minInstances: 1
    maxInstances: 2
    targetCPUPercent: 90
    targetMemoryPercent: 90
  buildFilter:
    paths:
    - nextjs/**
  rootDir: nextjs
- type: web
  name: minio-server
  runtime: image
  image:
    url: docker.io/minio/minio:latest
  plan: starter
  previewPlan: starter
  envVars:
  - key: CONSOLE_PORT
    sync: false
  - key: PORT
    sync: false
  - key: HOST
    sync: false
  - key: MINIO_ROOT_USER
    sync: false
  - key: MINIO_ROOT_PASSWORD
    sync: false
  - key: MINIO_BROWSER
    sync: false
  region: frankfurt
  healthCheckPath: /minio/health/live
  dockerCommand: minio server /data --address $HOST:$PORT --console-address $HOST:$CONSOLE_PORT
  domains:
  - uploads.commonknowledge.coop
  disk:
    name: data
    mountPath: /data
    sizeGB: 10
  autoDeploy: false
- type: web
  name: minio-console
  runtime: image
  image:
    url: docker.io/minio/console:v0.30.0
  plan: starter
  previewPlan: starter
  envVars:
  - key: MINIO_HOST
    fromService:
      name: minio-server
      type: ""
      property: host
  - key: PORT
    sync: false
  - key: CONSOLE_PBKDF_SALT
    sync: false
  - key: CONSOLE_PBKDF_PASSPHRASE
    sync: false
  region: frankfurt
  dockerCommand: /bin/bash -c CONSOLE_MINIO_SERVER=https://$MINIO_HOST.onrender.com
    ./console server --port $PORT
  autoDeploy: false