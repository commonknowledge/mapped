from unittest import mock

from django.core.management import call_command
from django.test import TestCase

from hub.models import Area
from utils.mapit import MapIt


def mock_areas_of_type(types):
    if "WMC" in types:
        return [
            {
                "id": 1,
                "codes": {"gss": "E10000001", "unit_id": "1"},
                "name": "South Borsetshire",
                "country": "E",
                "type": "WMC",
            },
            {
                "id": 4,
                "codes": {"gss": "E10000004", "unit_id": "4"},
                "name": "North Borsetshire",
                "country": "E",
                "type": "WMC",
            },
        ]

    return []


class ImportAreasTestCase(TestCase):
    quiet_parameter: bool = False
    maxDiff = None

    @mock.patch.object(MapIt, "areas_of_type")
    @mock.patch.object(MapIt, "area_geometry")
    def test_import(self, mapit_geom, mapit_areas):
        mapit_geom.return_value = {
            "type": "Polygon",
            "coordinates": [
                [
                    [355272.7037, 214366.797499999],
                    [355288.5266, 214298.2019],
                    [355302.7834, 214258.4015],
                    [355308.0008, 214245.1022],
                    [355297.4966, 214168.5042],
                    [355287.0007, 214143.101399999],
                    [355030.0021, 214093.3957],
                    [354547.699, 213998.402799999],
                    [354681.4009, 213668.6972],
                    [354622.0035, 213539.5043],
                    [354526.7978, 213482.8004],
                    [354531.8025, 213458.997300001],
                    [354554.1645, 213396.302200001],
                    [354568.7458, 213360.897299999],
                    [354679.0016, 212973.6962],
                    [354677.1959, 212900.497099999],
                    [354678.3008, 212856.299799999],
                    [354674.7966, 212740.303099999],
                    [354627.404, 212654.997500001],
                    [354437.8006, 212591.195699999],
                    [354276.0984, 212607.5011],
                    [354147.6981, 212561.204299999],
                    [353920.2004, 212464.502],
                    [353724.3967, 212465.7017],
                    [353663.3997, 212296.200099999],
                    [353663.3997, 212271.7972],
                    [353606.4016, 212269.797700001],
                    [353530.4976, 212227.899700001],
                    [353510.0993, 212183.702299999],
                    [353511.8967, 212134.196599999],
                    [353449.9021, 212047.101500001],
                    [353454.0987, 212046.7015],
                    [353417.3011, 211982.9998],
                    [353413.2033, 211956.7973],
                    [353309.497, 211795.4035],
                    [353304.6983, 211769.800799999],
                    [353309.802, 211738.0999],
                    [353354.1096, 211661.005100001],
                    [353363.5021, 211637.4987],
                    [353377.4033, 211561.100500001],
                    [353372.4975, 211531.399],
                    [353376.6035, 211512.5044],
                    [353372.2996, 211495.599300001],
                    [353373.5034, 211470.4965],
                    [353381.4788, 211448.9058],
                    [353399.6513, 211405.151699999],
                    [353403.7773, 211392.591600001],
                    [353417.1165, 211351.503699999],
                    [353494.4996, 211251.099300001],
                    [353577.2965, 211143.300100001],
                    [353578.8409, 211141.5089],
                    [353722.6395, 210997.7005],
                    [353736.7354, 210978.397399999],
                    [353895.2935, 210848.2974],
                    [353857.8018, 210780.604],
                    [353739.9963, 210758.3004],
                    [353700.9972, 210705.295499999],
                    [353706.9007, 210651.101],
                    [353681.4976, 210580.001399999],
                    [353673.4999, 210521.7981],
                    [353692.3976, 210445],
                    [353684.6967, 210414.0988],
                    [353685.4965, 210341.899599999],
                    [353626.8988, 210191.4027],
                    [353479.9966, 210150.304400001],
                    [353434.4014, 210246.297],
                    [353247.2962, 210453.197699999],
                    [352832.0997, 210848.5046],
                    [352653.1983, 211318.9999],
                    [352579.8997, 211412.7031],
                    [352468.7975, 211455.001],
                    [352288.0988, 211465.797900001],
                    [351890.2004, 211406.9047],
                    [351793.6012, 211446.3035],
                    [351611.6987, 211638.498500001],
                    [351469.1993, 211852.7971],
                    [351367.2986, 212081.001800001],
                    [351234.3965, 212151.3017],
                    [351120.5, 212207.6],
                    [351043.8, 212350.800000001],
                    [351059.7991, 212540.500299999],
                    [351110.3001, 212685.398800001],
                    [351317.8035, 212941.995300001],
                    [351600.8977, 213142.697899999],
                    [351948.0726, 213452.1622],
                    [352569.7006, 213946.797700001],
                    [352646.7012, 214054.4969],
                    [352796.5965, 214632.501399999],
                    [352757.4984, 215160.9002],
                    [352799.5976, 215467.9023],
                    [352815.9951, 215493.3969],
                    [352776.899, 215530.304400001],
                    [353049.2004, 215758.799000001],
                    [353064.7011, 215681.801100001],
                    [353272.5014, 215656.1984],
                    [353363.197, 215589.6974],
                    [353461.2968, 215564.9045],
                    [353462.5006, 215520.6972],
                    [353826.9982, 215505.9014],
                    [354249.4999, 215404.500399999],
                    [354288.598, 215379.5976],
                    [354609.001, 215215.3046],
                    [354746.0999, 215097.7982],
                    [354781.2981, 214972.404100001],
                    [354756.9999, 214598.801100001],
                    [354828.5011, 214454.9023],
                    [355033.1022, 214364.4981],
                    [355272.7037, 214366.797499999],
                ]
            ],
        }
        mapit_areas.side_effect = mock_areas_of_type

        call_command("import_areas", quiet=self.quiet_parameter)

        areas = Area.objects.all()
        self.assertEqual(areas.count(), 2)

        first = areas[0]
        self.assertEqual(first.name, "South Borsetshire")
        self.assertEqual(first.mapit_id, "1")
        self.assertEqual(first.gss, "E10000001")
        self.assertEqual(
            first.geometry,
            '{"type": "Feature", "geometry": {"type": "Polygon", "coordinates": [[[355272.7037, 214366.797499999], [355288.5266, 214298.2019], [355302.7834, 214258.4015], [355308.0008, 214245.1022], [355297.4966, 214168.5042], [355287.0007, 214143.101399999], [355030.0021, 214093.3957], [354547.699, 213998.402799999], [354681.4009, 213668.6972], [354622.0035, 213539.5043], [354526.7978, 213482.8004], [354531.8025, 213458.997300001], [354554.1645, 213396.302200001], [354568.7458, 213360.897299999], [354679.0016, 212973.6962], [354677.1959, 212900.497099999], [354678.3008, 212856.299799999], [354674.7966, 212740.303099999], [354627.404, 212654.997500001], [354437.8006, 212591.195699999], [354276.0984, 212607.5011], [354147.6981, 212561.204299999], [353920.2004, 212464.502], [353724.3967, 212465.7017], [353663.3997, 212296.200099999], [353663.3997, 212271.7972], [353606.4016, 212269.797700001], [353530.4976, 212227.899700001], [353510.0993, 212183.702299999], [353511.8967, 212134.196599999], [353449.9021, 212047.101500001], [353454.0987, 212046.7015], [353417.3011, 211982.9998], [353413.2033, 211956.7973], [353309.497, 211795.4035], [353304.6983, 211769.800799999], [353309.802, 211738.0999], [353354.1096, 211661.005100001], [353363.5021, 211637.4987], [353377.4033, 211561.100500001], [353372.4975, 211531.399], [353376.6035, 211512.5044], [353372.2996, 211495.599300001], [353373.5034, 211470.4965], [353381.4788, 211448.9058], [353399.6513, 211405.151699999], [353403.7773, 211392.591600001], [353417.1165, 211351.503699999], [353494.4996, 211251.099300001], [353577.2965, 211143.300100001], [353578.8409, 211141.5089], [353722.6395, 210997.7005], [353736.7354, 210978.397399999], [353895.2935, 210848.2974], [353857.8018, 210780.604], [353739.9963, 210758.3004], [353700.9972, 210705.295499999], [353706.9007, 210651.101], [353681.4976, 210580.001399999], [353673.4999, 210521.7981], [353692.3976, 210445], [353684.6967, 210414.0988], [353685.4965, 210341.899599999], [353626.8988, 210191.4027], [353479.9966, 210150.304400001], [353434.4014, 210246.297], [353247.2962, 210453.197699999], [352832.0997, 210848.5046], [352653.1983, 211318.9999], [352579.8997, 211412.7031], [352468.7975, 211455.001], [352288.0988, 211465.797900001], [351890.2004, 211406.9047], [351793.6012, 211446.3035], [351611.6987, 211638.498500001], [351469.1993, 211852.7971], [351367.2986, 212081.001800001], [351234.3965, 212151.3017], [351120.5, 212207.6], [351043.8, 212350.800000001], [351059.7991, 212540.500299999], [351110.3001, 212685.398800001], [351317.8035, 212941.995300001], [351600.8977, 213142.697899999], [351948.0726, 213452.1622], [352569.7006, 213946.797700001], [352646.7012, 214054.4969], [352796.5965, 214632.501399999], [352757.4984, 215160.9002], [352799.5976, 215467.9023], [352815.9951, 215493.3969], [352776.899, 215530.304400001], [353049.2004, 215758.799000001], [353064.7011, 215681.801100001], [353272.5014, 215656.1984], [353363.197, 215589.6974], [353461.2968, 215564.9045], [353462.5006, 215520.6972], [353826.9982, 215505.9014], [354249.4999, 215404.500399999], [354288.598, 215379.5976], [354609.001, 215215.3046], [354746.0999, 215097.7982], [354781.2981, 214972.404100001], [354756.9999, 214598.801100001], [354828.5011, 214454.9023], [355033.1022, 214364.4981], [355272.7037, 214366.797499999]]]}, "properties": {"PCON13CD": "E10000001", "name": "South Borsetshire", "type": "WMC23", "mapit_type": "WMC"}}',
        )


class ImportAreasTestCaseQuietFlag(ImportAreasTestCase):
    """
    Do the Import Areas check, but with the quiet flag on
    """

    quiet_parameter: bool = True
