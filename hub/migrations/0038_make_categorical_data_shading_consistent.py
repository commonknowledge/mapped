# Generated by Django 4.1.2 on 2023-05-02 15:03

from django.db import migrations

not_shadable_list = [
    "power_postcodes",
    "constituency_age_distribution",
    "mp_appg_memberships",
    "select_committee_membership",
    "constituency_nt_properties",
    "constituency_popular_petitions",
    "constituency_wi_groups",
]


def add_is_shadable_false(apps, schemaeditor):
    DataSet = apps.get_model("hub", "DataSet")
    for name in not_shadable_list:
        try:
            dataset = DataSet.objects.get(name=name)
        except DataSet.DoesNotExist:
            continue
        dataset.is_shadable = False
        dataset.save()


true_false_options = [
    {"title": "True", "shader": "blue-500"},
    {"title": "False", "shader": "orange-500"},
]
signed_options = [{"title": "Signed", "shader": "blue-500"}]
vote_options = [
    {"title": "Aye", "shader": "blue-500"},
    {"title": "No", "shader": "orange-500"},
    {"title": "Did not vote", "shader": "gray-500"},
    {"title": "Did not vote (teller)", "shader": "gray-500"},
    {"title": "Not in office", "shader": "gray-300"},
]
edm_options = [
    {"title": "Supporter", "shader": "blue-500"},
    {"title": "Did not support", "shader": "gray-500"},
    {"title": "Not in office", "shader": "gray-300"},
]
shader_colours_lookup = {
    "cen_member": true_false_options,
    "nzsg_member": true_false_options,
    "net_zero_target": signed_options,
    "onshore_wind_energy": signed_options,
    "1116_vote": vote_options,
    "1372_vote": vote_options,
    "58953_edm": edm_options,
    "60083": edm_options,
    "constituency_red_blue_wall": [
        {"title": "Red Wall", "shader": "red-500"},
        {"title": "Blue Wall", "shader": "blue-500"},
    ],
}


def add_shader_colours(apps, schemaeditor):  # pragma: no cover
    DataSet = apps.get_model("hub", "DataSet")

    for name, options in shader_colours_lookup.items():
        try:
            dataset = DataSet.objects.get(name=name)
        except DataSet.DoesNotExist:
            continue
        dataset.options = options
        dataset.save()


def reverse_noop(apps, schema_editor):  # pragma: no cover
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("hub", "0037_dataset_is_shadable"),
    ]

    operations = [migrations.RunPython(add_shader_colours, reverse_noop)]
