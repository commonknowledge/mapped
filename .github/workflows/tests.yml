name: Run project tests

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
on:
  pull_request:
    
jobs:
  prep:
    name: Prep Django
    uses: ./.github/workflows/_prep_django.yml

  check_startup:
    name: Check that Django starts up correctly
    needs: prep
    steps:
      - name: Start ngrok tunnelling
        run: |
          ngrok authtoken ${{ secrets.NGROK_AUTHTOKEN }}
          ngrok http 8000 --log=stdout > ngrok.log &
      - name: Extract ngrok URL
        run: |
          BASE_URL=$(cat ngrok.log | grep 'url=' | awk -F= '{print $NF}')
          echo "BASE_URL=$BASE_URL" > .env
          ALLOWED_HOSTS=$(echo $BASE_URL | sed -e "s/https:\/\///g")
          echo "ALLOWED_HOSTS=$ALLOWED_HOSTS" >> .env
      - name: Initialize database
        run: python manage.py migrate
      - name: Initialize cache
        run: python manage.py createcachetable
      - name: Start server
        run: gunicorn local_intelligence_hub.asgi:application -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 > server.log 2>&1 &

  tests:
    name: Run Django tests
    needs: prep
    steps:
      - name: Run django tests
        run: cat .env && coverage run --source=. --branch manage.py test --parallel || (cat server.log && exit 1)
      - name: Generate coverage xml
        run: coverage xml
      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage.xml
          path: coverage.xml
          retention-days: 5

  geocoding_tests:
    name: Run geocoding tests
    needs: prep
    steps:
     - name: Run geocoding tests in isolation
        run: |
          echo "RUN_GEOCODING_TESTS=1" >> .env
          cat .env && python manage.py test hub.tests.test_external_data_source_parsers || (cat server.log && exit 1)